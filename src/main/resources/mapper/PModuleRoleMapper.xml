<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xc.fast_deploy.dao.master_dao.PModuleRoleMapper">
    <resultMap id="BaseResultMap" type="com.xc.fast_deploy.model.master_model.PModuleRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_code" property="roleCode" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , role_name, role_code, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from module_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from module_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.xc.fast_deploy.model.master_model.PModuleRole">
        insert into module_role (id, role_name, role_code,
                                 create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xc.fast_deploy.model.master_model.PModuleRole">
        insert into module_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xc.fast_deploy.model.master_model.PModuleRole">
        update module_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xc.fast_deploy.model.master_model.PModuleRole">
        update module_role
        set role_name   = #{roleName,jdbcType=VARCHAR},
            role_code   = #{roleCode,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <delete id="deleteRoleBasePermByRoleId" parameterType="java.lang.Integer">
        DELETE
        FROM module_role_base_perm
        WHERE role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteRoleBasePermByBaseId" parameterType="java.lang.Integer">
        DELETE
        FROM module_role_base_perm
        WHERE base_per_id = #{basePermissionId,jdbcType=INTEGER}
    </delete>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from module_role
    </select>

    <select id="selectPermissionByRoleId"
            parameterType="java.lang.Integer"
            resultType="com.xc.fast_deploy.model.master_model.PModulePermission">
        SELECT DISTINCT (c.action) AS action,c.id AS id,c.action_name AS actionName,
        c.url AS url,c.create_time AS createTime,c.update_time as updateTime
        FROM module_role_base_perm a, module_role b, module_permission c, module_base_perm_list d, module_base_permission e
        WHERE a.role_id = b.id
          AND a.base_per_id = e.id
          AND d.permission_id = c.id
          AND d.base_per_id = e.id
          AND b.id = #{roleId,jdbcType=INTEGER}
    </select>

    <select id="selectRoleBasePermByRoleId" parameterType="java.lang.Integer"
            resultType="com.xc.fast_deploy.model.master_model.PModuleBasePermission">
        SELECT DISTINCT(c.id)          AS id,
                       c.base_per_name AS basePerName,
                       c.base_per_code AS basePerCode,
                       c.remark        AS remark,
                       c.create_time   AS createTime,
                       c.update_time   AS updateTime
        FROM module_role_base_perm a,
             module_role b,
             module_base_permission c
        WHERE a.role_id = b.id
          AND a.base_per_id = c.id
          AND b.id = #{roleId,jdbcType=INTEGER}
    </select>
</mapper>